<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="42825" started-at="2021-03-16T17:00:11 IST" finished-at="2021-03-16T17:00:54 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="42825" started-at="2021-03-16T17:00:11 IST" finished-at="2021-03-16T17:00:54 IST">
      <class name="tests.Sanity">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.Sanity@fad74ee]" name="beforeClass" is-config="true" duration-ms="16647" started-at="2021-03-16T17:00:11 IST" finished-at="2021-03-16T17:00:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Sanity@fad74ee]" name="beforeMethod" is-config="true" duration-ms="15" started-at="2021-03-16T17:00:28 IST" finished-at="2021-03-16T17:00:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Sanity.goToRegister() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="goToRegister()[pri:1, instance:tests.Sanity@fad74ee]" name="goToRegister" duration-ms="13582" started-at="2021-03-16T17:00:28 IST" description="Going to registration" finished-at="2021-03-16T17:00:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToRegister -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Sanity@fad74ee]" name="afterMethod" is-config="true" duration-ms="5703" started-at="2021-03-16T17:00:42 IST" finished-at="2021-03-16T17:00:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToRegister status=SUCCESS method=Sanity.goToRegister()[pri:1, instance:tests.Sanity@fad74ee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="selectAccountTypeIM()[pri:2, instance:tests.Sanity@fad74ee]" name="selectAccountTypeIM" duration-ms="2819" started-at="2021-03-16T17:00:47 IST" description="Select Account type" finished-at="2021-03-16T17:00:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAccountTypeIM -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Sanity@fad74ee]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-03-16T17:00:47 IST" finished-at="2021-03-16T17:00:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Sanity.selectAccountTypeIM() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Sanity@fad74ee]" name="afterMethod" is-config="true" duration-ms="615" started-at="2021-03-16T17:00:50 IST" finished-at="2021-03-16T17:00:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAccountTypeIM status=SUCCESS method=Sanity.selectAccountTypeIM()[pri:2, instance:tests.Sanity@fad74ee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Sanity@fad74ee]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2021-03-16T17:00:51 IST" finished-at="2021-03-16T17:00:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Sanity.selectAccountTypeLookingTo() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectAccountTypeLookingTo()[pri:3, instance:tests.Sanity@fad74ee]" name="selectAccountTypeLookingTo" duration-ms="613" started-at="2021-03-16T17:00:51 IST" description="Verify if filter is working" finished-at="2021-03-16T17:00:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAccountTypeLookingTo -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Sanity@fad74ee]" name="afterMethod" is-config="true" duration-ms="338" started-at="2021-03-16T17:00:51 IST" finished-at="2021-03-16T17:00:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAccountTypeLookingTo status=SUCCESS method=Sanity.selectAccountTypeLookingTo()[pri:3, instance:tests.Sanity@fad74ee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Sanity@fad74ee]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-03-16T17:00:52 IST" finished-at="2021-03-16T17:00:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Sanity.verifyURL() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyURL()[pri:4, instance:tests.Sanity@fad74ee]" name="verifyURL" duration-ms="243" started-at="2021-03-16T17:00:52 IST" description="Verify page URL" finished-at="2021-03-16T17:00:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyURL -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Sanity@fad74ee]" name="afterMethod" is-config="true" duration-ms="359" started-at="2021-03-16T17:00:52 IST" finished-at="2021-03-16T17:00:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyURL status=SUCCESS method=Sanity.verifyURL()[pri:4, instance:tests.Sanity@fad74ee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:tests.Sanity@fad74ee]" name="afterClass" is-config="true" duration-ms="1799" started-at="2021-03-16T17:00:52 IST" finished-at="2021-03-16T17:00:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- tests.Sanity -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
